local wk = require("which-key")
wk.add(
  {
    { "<leader>", group = "Plugins" },
    { "<leader>?", require("which-key").show, desc = "Buffer keymaps", noremap = true, silent = true },
    -- blink.cmp (default settings)
    { "<C-space>", mode = { "i" }, desc = "Show completion list or documentation or hide documentation", noremap = true, silent = true },
    { "<C-e>", mode = { "i" }, desc = "Hide completion list", noremap = true, silent = true },
    { "<up>", mode = { "i" }, desc = "Select previous suggestion", noremap = true, silent = true },
    { "<C-p>", mode = { "i" }, desc = "Select previous suggestion", noremap = true, silent = true },
    { "<down>", mode = { "i" }, desc = "Select next suggestion", noremap = true, silent = true },
    { "<C-n>", mode = { "i" }, desc = "Select next suggestion", noremap = true, silent = true },
    { "<C-b>", mode = { "i" }, desc = "Scroll documentation up", noremap = true, silent = true },
    { "<C-f>", mode = { "i" }, desc = "Scroll documentation down", noremap = true, silent = true },
    { "<tab>", mode = { "i", "s" }, desc = "Snippet forward", noremap = true, silent = true },
    { "<S-tab>", mode = { "i", "s" }, desc = "Snippet backwards", noremap = true, silent = true },
    { "<C-k>", mode = { "i", "s" }, desc = "Show signature", noremap = true, silent = true },
    { "<A-1>", mode = { "i", "s" }, desc = "Select 1st suggestion", noremap = true, silent = true },
    { "<A-2>", mode = { "i", "s" }, desc = "Select 2nd suggestion", noremap = true, silent = true },
    { "<A-3>", mode = { "i", "s" }, desc = "Select 3th suggestion", noremap = true, silent = true },
    { "<A-4>", mode = { "i", "s" }, desc = "Select 4th suggestion", noremap = true, silent = true },
    { "<A-5>", mode = { "i", "s" }, desc = "Select 5th suggestion", noremap = true, silent = true },
    { "<A-6>", mode = { "i", "s" }, desc = "Select 6th suggestion", noremap = true, silent = true },
    { "<A-7>", mode = { "i", "s" }, desc = "Select 7th suggestion", noremap = true, silent = true },
    { "<A-8>", mode = { "i", "s" }, desc = "Select 8th suggestion", noremap = true, silent = true },
    { "<A-9>", mode = { "i", "s" }, desc = "Select 9th suggestion", noremap = true, silent = true },
    { "<A-0>", mode = { "i", "s" }, desc = "Select 10th suggestion", noremap = true, silent = true },
    -- DAP
    { "<F5>", "<cmd>DapContinue<cr>", mode = { "n", "i", "v" }, desc = "Start/continue debug", noremap = true, silent = true },
    { "<F5>", require("dap-python").debug_selection, mode = { "s" }, desc = "Debug the code (Python)", noremap = true, silent = true },
    { "<C-F5>", require("dap").run_to_cursor, mode = { "n", "i", "v", "s" }, desc = "Run to cursor", noremap = true, silent = true },
    { "<S-F5>", "<cmd>DapTerminate<cr>", mode = { "n", "i", "v", "s" }, desc = "Stop debugger", noremap = true, silent = true },
    { "<C-S-F5>", require("dap").restart, mode = { "n", "i", "v", "s" }, desc = "Restart debugger", noremap = true, silent = true },
    { "<F9>", "<cmd>DapToggleBreakpoint<cr>", mode = { "n", "i", "v", "s" }, desc = "Toggle breakpoint", noremap = true, silent = true },
    { "<S-F9>", "<cmd>DapClearBreakPoints<cr>", mode = { "n", "i", "v", "s" }, desc = "Clear breakpoints", noremap = true, silent = true },
    { "<C-S-F9>", function() require("dap").set_breakpoint(vim.fn.input('Breakpoint condition: ')) end, mode = { "n", "i", "v", "s" }, desc = "Set conditional breakpoint", noremap = true, silent = true },
    { "<F10>", "<cmd>DapStepOver<cr>", mode = { "n", "i", "v", "s" }, desc = "Step over", noremap = true, silent = true },
    { "<F11>", "<cmd>DapSetpInto<cr>", mode = { "n", "i", "v", "s" }, desc = "Step into", noremap = true, silent = true },
    { "<S-F11>", "<cmd>DapStepOut<cr>", mode = { "n", "i", "v", "s" }, desc = "Step out", noremap = true, silent = true },
    { "<F12>", require("dap-python").test_method, mode = { "n", "i", "v", "s" }, desc = "Test method (Python)"},
    { "<S-F12>", require("dap-python").test_class, mode = { "n", "i", "v", "s" }, desc = "Test class (Python)"},
    { "dr", "<cmd>DapToggleRepl<cr>", mode = { "n" }, desc = "Toggle REPL", noremap = true, silent = true },
    { "dp", require("dap.ui.widgets").preview, mode = { "n" }, desc = "Preview in debug", noremap = true, silent = true },
    { "dK", require("dap.ui.widgets").hover, mode = { "n" }, desc = "Hover in debug", noremap = true, silent = true },
    -- DAP UI
    { "du", require("dapui").toggle, mode = { "n" }, desc = "Toggle REPL", noremap = true, silent = true },
    -- fzf-lua
    { "<leader>f", group = "fzf" },
    { "<leader>f<leader>", "<cmd>FzfLua<cr>", mode = { "n" }, desc = "Fzf overview", noremap = true, silent = true },
    { "<leader>fb", require("fzf-lua").buffers, mode = { "n" }, desc = "Fzf buffers", noremap = true, silent = true },
    { "<leader>ff", require("fzf-lua").files, mode = { "n" }, desc = "Fzf files", noremap = true, silent = true },
    { "<leader>fg", require("fzf-lua").live_grep, mode = { "n" }, desc = "Live grep current project", noremap = true, silent = true },
    { "<leader>ft", require("fzf-lua").tabs, mode = { "n" }, desc = "Fzf tabs", noremap = true, silent = true },
    { "<leader>fr", require("fzf-lua").resume, mode = { "n" }, desc = "Resuming work from where left off", noremap = true, silent = true },
    -- { "<leader>ft", require("trouble.sources.fzf").actions.open, mode = { "n" }, desc = "Fzf results in Trouble", noremap = true, silent = true },
    -- LSP
    { "K", mode = { "n" }, desc = "Display hover information about the symbol under the cursor in a floating window", noremap = true, silent = true },
    { "gD", vim.lsp.buf.declaration, mode = { "n" }, desc = "Jump to the declaration of the symbol under the cursor", noremap = true, silent = true },
    { "gd", vim.lsp.buf.definition, mode = { "n" }, desc = "Jump to the definition of the symbol under the cursor", noremap = true, silent = true },
    { "gO", mode = { "n" }, desc = "List all symbols in the current buffer in the location-list", noremap = true, silent = true },
    { "gr", mode = { "n" }, group = "LSP keymaps" },
    { "gra", mode = { "n" }, desc = "Select a code action available at the current cursor position", noremap = true, silent = true },
    { "grd", vim.lsp.buf.type_definition, mode = { "n" }, desc = "Jump to the definition of the type of the symbol under the cursor", noremap = true, silent = true },
    { "grf", vim.lsp.buf.format, mode = { "n" }, desc = "Format a buffer using the attached (and optionally filtered) language server clients", noremap = true, silent = true },
    { "gri", mode = { "n" }, desc = "List all the implementations for the symbol under the cursor in the quickfix window", noremap = true, silent = true },
    { "grn", mode = { "n" }, desc = "Rename all references to the symbol under the cursor", noremap = true, silent = true },
    { "grs", vim.lsp.buf.document_symbol, mode = { "n" }, desc = "List all symbols in the current buffer in the location list", noremap = true, silent = true },
    { "<C-k>", vim.diagnostic.open_float, mode = { "n", "i", "v", "s" }, desc = "Show diagnostics in a floating window.", noremap = true, silent = true },
    { "<C-s>", mode = { "i", "s" }, desc = "Display signature information about the symbol under the cursor in a floating window", noremap = true, silent = true },
    -- mini.jump2d
    { "<cr>", mode = { "n", "v" }, desc = "Jump within vsible lines", noremap = true, silent = true },
    -- Twilight
    { "<A-t>", "<cmd>Twilight<cr>", mode = { "n", "i", "v", "s" }, desc = "Toggle Twilight"}
  }
  -- TODO: fzf, TROUBLE
)
